{"version":3,"sources":["components/Card/Card.jsx","components/CardList/CardList.jsx","components/SearchBox/SearchBox.jsx","components/App.js","index.js"],"names":["Card","monster","className","alt","src","id","name","email","renderList","monsters","map","CardList","SearchBox","placeholder","value","onChange","type","App","useState","setMonsters","useEffect","fetch","then","response","json","searchText","setSearchText","filteredMonsters","filter","toLowerCase","includes","e","target","ReactDOM","render","document","getElementById"],"mappings":"mRAYeA,EARF,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACZ,sBAAKC,UAAU,iBAAf,UACC,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAQI,GAAlC,eACtB,mCAAOJ,EAAQK,KAAf,OACA,kCAAML,EAAQM,MAAd,WCFIC,G,MAAa,SAACC,GACnB,OAAOA,EAASC,KAAI,SAAAT,GAAO,OAC1B,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQI,SASNM,EAJE,SAAC,GAAkB,IAAhBF,EAAe,EAAfA,SACnB,OAAO,qBAAKP,UAAU,YAAf,SAA6BM,EAAWC,MCAjCG,G,MAVG,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,MAAOC,EAAvB,EAAuBA,SAAvB,OACjB,uBACCb,UAAc,SACdc,KAAc,SACdH,YAAeA,EACfC,MAAeA,EACfC,SAAeA,MCqBFE,G,MAxBH,WACX,MAAgCC,mBAAS,IAAzC,mBAAOT,EAAP,KAAiBU,EAAjB,KACAC,qBAAU,WACTC,MAAM,8CACJC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,KAAKH,KACL,IAEH,MAAoCD,mBAAS,IAA7C,mBAAOO,EAAP,KAAmBC,EAAnB,KAEMC,EAAmBlB,EAASmB,QAAO,SAAA3B,GAAO,OAAIA,EAAQK,KAAKuB,cAAcC,SAASL,EAAWI,kBACnG,OACC,sBAAK3B,UAAU,MAAf,UACC,kDACA,cAAC,EAAD,CACCW,YAAc,kBACdC,MAAeW,EACfV,SAAe,SAAAgB,GAAC,OAAIL,EAAcK,EAAEC,OAAOlB,UAE5C,cAAC,EAAD,CAAUL,SAAUkB,S,MCnBvBM,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.bdef2883.chunk.js","sourcesContent":["import React from 'react';\n\nimport 'components/Card/Card.css';\n\nconst Card = ({ monster }) => (\n\t<div className=\"card-container\">\n\t\t<img alt=\"monster\" src={`https://robohash.org/${monster.id}?set=set2`} />\n\t\t<h2> { monster.name } </h2>\n\t\t<p> { monster.email } </p>\n\t</div>\n);\n\nexport default Card;\n\n","import React from 'react';\n\nimport Card  from 'components/Card/Card';\n\nimport 'components/CardList/CardList.css'\n\nconst renderList = (monsters) => {\n\treturn monsters.map(monster => \n\t\t<Card key={monster.id} monster={monster} />\n\t);\n}\n\n\nconst CardList = ({ monsters }) => {\n\treturn\t<div className=\"card-list\">{ renderList(monsters) }</div>;\n}\n\nexport default CardList;\n","import React from 'react';\n\nimport 'components/SearchBox/SearchBox.css';\n\nconst SearchBox = ({ placeholder, value, onChange }) => (\n\t<input \n\t\tclassName   = \"search\"\n\t\ttype        = \"search\"\n\t\tplaceholder = {placeholder}\n\t\tvalue       = {value}\n\t\tonChange    = {onChange}\n\t/>\n);\n\nexport default SearchBox;\n","import React, { useState, useEffect } from \"react\";\n\nimport CardList                       from 'components/CardList/CardList';\nimport SearchBox                      from 'components/SearchBox/SearchBox';\n\nimport 'components/App.css';\n\nconst App = () => {\n\tconst [monsters, setMonsters] = useState([]);\n\tuseEffect(() => {\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t\t.then(response => response.json())\n\t\t\t.then(setMonsters);\n\t}, []);\n\n\tconst [searchText, setSearchText] = useState('');\n\t\n\tconst filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchText.toLowerCase()));\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<h1>Monsters Rolodex</h1>\n\t\t\t<SearchBox \n\t\t\t\tplaceholder = \"Search Monsters\"\n\t\t\t\tvalue       = {searchText}\n\t\t\t\tonChange    = {e => setSearchText(e.target.value)}\n\t\t\t/>\n\t\t\t<CardList monsters={filteredMonsters}/>\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import React    from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App      from 'components/App';\n\nimport 'index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}